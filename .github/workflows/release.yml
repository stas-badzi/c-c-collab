name: Download & Release Binaries

on:
  push:
    tags:
      - v*.*-zeta
      - v*.*.*-zeta
      - v*.*.*-alpha
      - v*.*-alpha
      - v*.*.*-alpha
      - v*.*-beta
      - v*.*.*-beta
      - v*.*
      - v*.*.*

jobs:
  release:
    name: Release Compiled Binaries and Source Code
    runs-on: ubuntu-latest
    steps:
      - name: checkout last commit
        uses: actions/checkout@v4
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: stas-badzi
          repo: c-c-collab
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          body_path: Release.md
          draft: false
          prerelease: false
      - name: Clean Files
        run: rm -rf *

      - name: Download MacOSArmCppBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: MacOSArmCppBin
          path: .
      - name: Get Name of MacOSArmCppBin
        shell: sh
        id: macos-cpp-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload MacOSArmCppBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.macos-cpp-bin-name.outputs.path }}
          asset_name: ${{ steps.macos-cpp-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean MacOSAmdCppBin
        shell: sh
        run: rm -rf *

      - name: Download MacOSArmCsBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: MacOSArmCsBin
          path: .
      - name: Get Name of MacOSArmCsBin
        shell: sh
        id: macos-cs-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload MacOSArmCsBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.macos-cs-bin-name.outputs.path }}
          asset_name: ${{ steps.macos-cs-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean MacOSArmCsBin
        shell: sh
        run: rm -rf *
        
      - name: Download MacOSx64CppBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: MacOSAmdCppBin
          path: .
      - name: Get Name of MacOSAmdCppBin
        shell: sh
        id: macosx64-cpp-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload MacOSAmdCppBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.macosx64-cpp-bin-name.outputs.path }}
          asset_name: ${{ steps.macosx64-cpp-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean MacOSAmdCppBin
        shell: sh
        run: rm -rf *

      - name: Download MacOSAmdCsBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: MacOSAmdCsBin
          path: .
      - name: Get Name of MacOSAmdCsBin
        shell: sh
        id: macosx64-cs-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload MacOSAmdCsBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.macosx64-cs-bin-name.outputs.path }}
          asset_name: ${{ steps.macosx64-cs-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean MacOSAmdCsBin
        shell: sh
        run: rm -rf *

      - name: Download UbuntuCppBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: UbuntuCppBin
          path: .
      - name: Get Name of UbuntuCppBin
        shell: sh
        id: ubuntu-cpp-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload UbuntuCppBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.ubuntu-cpp-bin-name.outputs.path }}
          asset_name: ${{ steps.ubuntu-cpp-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean UbuntuCppBin
        shell: sh
        run: rm -rf *

      - name: Download UbuntuCsBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: UbuntuCsBin
          path: .
      - name: Get Name of UbuntuCsBin
        shell: sh
        id: ubuntu-cs-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload UbuntuCsBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.ubuntu-cs-bin-name.outputs.path }}
          asset_name: ${{ steps.ubuntu-cs-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean UbuntuCsBin
        shell: sh
        run: rm -rf *

      - name: Download DebianCppBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: DebianCppBin
          path: .
      - name: Get Name of DebianCppBin
        shell: sh
        id: debian-cpp-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload DebianCppBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.debian-cpp-bin-name.outputs.path }}
          asset_name: ${{ steps.debian-cpp-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean DebianCppBin
        shell: sh
        run: rm -rf *

      - name: Download DebianCsBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: DebianCsBin
          path: .
      - name: Get Name of DebianCsBin
        shell: sh
        id: debian-cs-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload DebianCsBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.debian-cs-bin-name.outputs.path }}
          asset_name: ${{ steps.debian-cs-bin-name.outputs.path }}
          asset_content_type: application/x-tar
      - name: Clean DebianCsBin
        shell: sh
        run: rm -rf *

      - name: Download Msys2CppBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: Msys2CppBin
          path: .
      - name: Get Name of Msys2CppBin
        shell: sh
        id: msys-cpp-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload Msys2CppBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.msys-cpp-bin-name.outputs.path }}
          asset_name: ${{ steps.msys-cpp-bin-name.outputs.path }}
          asset_content_type: application/zip
      - name: Clean Msys2CppBin
        shell: sh
        run: rm -rf *

      - name: Download Msys2CsBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: Msys2CsBin
          path: .
      - name: Get Name of Msys2CsBin
        shell: sh
        id: msys-cs-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload Msys2CsBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.msys-cs-bin-name.outputs.path }}
          asset_name: ${{ steps.msys-cs-bin-name.outputs.path }}
          asset_content_type: application/zip
      - name: Clean Msys2CsBin
        shell: sh
        run: rm -rf *

      - name: Download CygwinCppBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: CygwinCppBin
          path: .
      - name: Get Name of CygwinCppBin
        shell: sh
        id: cygwin-cpp-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload CygwinCppBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.cygwin-cpp-bin-name.outputs.path }}
          asset_name: ${{ steps.cygwin-cpp-bin-name.outputs.path }}
          asset_content_type: application/zip
      - name: Clean CygwinCppBin
        shell: sh
        run: rm -rf *

      - name: Download CygwinCsBin
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          branch: main
          name: CygwinCsBin
          path: .
      - name: Get Name of CygwinCsBin
        shell: sh
        id: cygwin-cs-bin-name
        run: "echo path=$(ls) >> $GITHUB_OUTPUT"
      - name: Upload CygwinCsBin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.cygwin-cs-bin-name.outputs.path }}
          asset_name: ${{ steps.cygwin-cs-bin-name.outputs.path }}
          asset_content_type: application/zip
      - name: Clean CygwinCsBin
        shell: sh
        run: rm -rf *
      


  