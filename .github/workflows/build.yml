name: Build & Upload Binaries

on:
  push:
    branches:
      - '**'

jobs:
  compile-cs-windows:
    name: Compile C# for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Compile c#
        shell: cmd
        run: |
          make cs sudo=0
          make csbin sudo=0
      - name: Export binaries
        uses: actions/upload-artifact@v4
        with:
          name: DotNetBinaries
          path: .

  build-msys:
    name: Build program using MSYS2
    needs: compile-cs-windows
    runs-on: windows-latest
    steps:
      - name: Import C# compiled source code
        uses: actions/download-artifact@v4
        with:
          name: DotNetBinaries
          path: .
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
      - name: Install Programs
        shell: msys2 {0}
        run: |
          touch cs
          touch csbin
          echo Y > yes.in
          pacman -S make < yes.in
          pacman -S zip < yes.in
          (echo && echo && echo Y) > yes.in 
          pacman -S --needed base-devel mingw-w64-ucrt-x86_64-toolchain < yes.in
          rm yes.in
      - name: Compile code
        shell: msys2 {0}
        env:
          CC: gcc
          CXX: g++
        run: |
          export PATH="/ucrt64/bin:$PATH"
          make release sudo=0
      - name: Upload C++ binaries
        uses: actions/upload-artifact@v4
        with:
          name: Msys2CppBin
          path: bin/*C++*.zip
      - name: Upload C# binaries
        uses: actions/upload-artifact@v4
        with:
          name: Msys2CsBin
          path: bin/*C#*.zip

  build-cygwin:
    name: Build program using Cygwin
    needs: compile-cs-windows
    runs-on: windows-latest
    steps:
      - name: Import C# compiled source code
        uses: actions/download-artifact@v4
        with:
          name: DotNetBinaries
          path: .
      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v4
        with:
          packages: gcc-g++ zip grep gawk
      - name: Install Programs
        shell: pwsh
        run: |
          echo $null >> cs
          echo $null >> csbin
          Invoke-WebRequest -Uri "https://github.com/maweil/MakeForWindows/releases/download/v4.4.1/make-bin-win64.zip" -OutFile "make-bin.zip" -Verbose
          Expand-Archive -Force make-bin.zip .
          del make-bin.zip
          copy make-4.4.1\dist\* .
      - name: Compile code
        shell: C:\tools\cygwin\bin\bash.exe --login -o igncr '{0}'
        env:
          CC: gcc
          CXX: g++
        run: |
          cd $(cygpath -u "${{ github.workspace }}")
          uname -s
          ./make release sudo=0
          
          cd bin
          ls
          rm *.zip
          rm -r $(ls | grep 'C++')
          rm -r $(ls | grep 'C#')
          mkdir cpp
          mkdir cs
          cd cpp

          cp /bin/cygwin1.dll .
          cp /bin/cyggcc_s-seh-1.dll .
          cp /bin/cygstdc++-6.dll .

          cd ../cs
          cp /bin/cygwin1.dll .
          cp /bin/cyggcc_s-seh-1.dll .
          cp /bin/cygstdc++-6.dll .
          cd ../..

          rm release
          ./make release
      - name: Upload C++ binaries
        uses: actions/upload-artifact@v4
        with:
          name: CygwinCppBin
          path: bin/*C++*.zip
      - name: Upload C# binaries
        uses: actions/upload-artifact@v4
        with:
          name: CygwinCsBin
          path: bin/*C#*.zip
  
#  build-windows:
#    name: Build dll using clang and exe using g++ on Windows
#    needs: compile-cs-windows
#    runs-on: windows-latest
#    steps:
#      - name: Import C# compiled source code
#        uses: actions/download-artifact@v4
#        with:
#          name: DotNetBinaries
#          path: .
#      - name: Set up Clang
#        uses: egor-tensin/setup-clang@v1
#      - name: Install Programs
#        shell: pwsh
#        run: |
#          echo $null >> cs
#          echo $null >> csbin
#          Invoke-WebRequest -Uri "https://github.com/leok7v/gnuwin32.mirror/archive/refs/heads/master.zip" -OutFile "gnuwin32.zip" -Verbose
#          Expand-Archive -Force gnuwin32.zip .
#          del gnuwin32.zip
#          ren gnuwin32.mirror-master gnuwin32
#          copy gnuwin32\bin\* .
#      - name: Compile code
#        shell: cmd
#        env:
#          CC: clang
#          CXX: clang++
#        run: |
#          .\make.exe cpp sudo=0 compiler=clang++
#          .\make.exe cppbin sudo=0 compiler=g++
#          .\make.exe release sudo=0
          
#      - name: Upload C++ binaries
#        uses: actions/upload-artifact@v4
#        with:
#          name: WindowsCppBin
#          path: bin/*C++*.zip
#      - name: Upload C# binaries
#        uses: actions/upload-artifact@v4
#        with:
#          name: WindowsCsBin
#          path: bin/*C#*.zip

  build-ubuntu:
    name: Build program using Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install Programs
        shell: sh
        run: |
          sudo apt-get install -y dotnet-sdk-8.0
      - name: Compile code
        shell: bash
        env:
          CC: gcc
          CXX: g++
        run: |
          make release sudo=0
      - name: Upload C++ binaries
        uses: actions/upload-artifact@v4
        with:
          name: UbuntuCppBin
          path: bin/*C++*.tar.gz
      - name: Upload C# binaries
        uses: actions/upload-artifact@v4
        with:
          name: UbuntuCsBin
          path: bin/*C#*.tar.gz

  build-debian:
    name: Build program using Debian
    runs-on: [self-hosted, debian]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Compile code
        shell: bash
        run: |
          make release sudo=0
      - name: Upload C++ binaries
        uses: actions/upload-artifact@v4
        with:
          name: DebianCppBin
          path: bin/*C++*.tar.gz
      - name: Upload C# binaries
        uses: actions/upload-artifact@v4
        with:
          name: DebianCsBin
          path: bin/*C#*.tar.gz
  
  build-macos-arm64:
    name: Build program using Arm64 MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Compile code
        shell: bash
        run: |
          make release sudo=0
      - name: Upload C++ binaries
        uses: actions/upload-artifact@v4
        with:
          name: MacOSArmCppBin
          path: bin/*C++*.tgz
      - name: Upload C# binaries
        uses: actions/upload-artifact@v4
        with:
          name: MacOSArmCsBin
          path: bin/*C#*.tgz
  
  build-macos-amd64:
    name: Build program using x64 MacOS
    runs-on: [self-hosted, macOS, X64]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Install Programs
        shell: sh
        run: |
          arch -x86_64 zsh
          brew install --cask dotnet-sdk
      - name: Compile code
        shell: bash
        env:
          CC: gcc
          CXX: g++
        run: |
          make release sudo=0
      - name: Upload C++ binaries
        uses: actions/upload-artifact@v4
        with:
          name: MacOSAmdCppBin
          path: bin/*C++*.tgz
      - name: Upload C# binaries
        uses: actions/upload-artifact@v4
        with:
          name: MacOSAmdCsBin
          path: bin/*C#*.tgz